tatic void task3(String str) {
        /*Текст задачи:
Напишите метод, который составит строку, состоящую из 100 повторений слова TEST и метод, который
запишет эту строку в простой текстовый файл, обработайте исключения.*/
        String path = "text.txt";
        try(FileWriter writer = new FileWriter(path, true)) {
            writer.write(str);
            writer.flush();
        } catch (Exception e){
            e.printStackTrace();
        }

    }

    static String repeat(int n, String str){
        return str.repeat(n);
    }

    tatic void task4(String str) {
            /*Текст задачи:
    Напишите метод, который составит строку, состоящую из 100 повторений слова TEST и метод, который
    запишет эту строку в простой текстовый файл, обработайте исключения.*/
            String path = "/f/f/f/f/text.txt";

            Logger logger = Logger.getAnonymousLogger();
            FileHandler handler = null;
            try {
                handler =  new FileHandler("log.txt", true);
            } catch (Exception e){
                e.printStackTrace();
            }

            logger.addHandler(handler);
            SimpleFormatter simpleFormatter = new SimpleFormatter();
            handler.setFormatter(simpleFormatter);

            try(FileWriter writer = new FileWriter(path, true)) {
                writer.write(str);
                writer.flush();
            } catch (Exception e){
                e.printStackTrace();
                logger.log(Level.INFO, e.getMessage());
            }

        }